{"version":3,"sources":["context/QuizReducer.js","context/QuizContext.js","components/Option.js","components/Question.js","questions/questionsAndAnswer.js","components/QuestionContainer.js","App.js","reportWebVitals.js","index.js"],"names":["quizReducer","state","action","type","correct","score","currentQuestion","payload","showScore","initialState","QuizContext","createContext","QuizProvider","children","useReducer","dispatch","Provider","value","Option","answerId","optionId","option","useContext","console","log","name","id","className","onClick","e","target","checked","htmlFor","Question","question","option_a","option_b","option_c","option_d","quizData","a","b","c","d","QuestionContainer","handleNext","length","answer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b78e390.chunk.js","sourcesContent":["const quizReducer = (state, action) => {\n  switch (action.type) {\n    case \"PICK\" && \"SUBMIT\":\n      if (state.correct) {\n        return {\n          ...state,\n          score: state.score + 1,\n          currentQuestion: state.currentQuestion + 1,\n        };\n      } else {\n        return {\n          ...state,\n          currentQuestion: state.currentQuestion + 1,\n        };\n      }\n    case \"PICK\":\n      return {\n        ...state,\n        correct: action.payload.correct,\n      };\n    case \"SUBMIT\":\n      return {\n        ...state,\n        currentQuestion: state.currentQuestion + 1,\n      };\n    case \"SHOW_SCORE\":\n      return {\n        ...state,\n        score: action.payload.score,\n        showScore: true,\n      };\n    case \"RESET_SCORE\":\n      return {\n        ...state,\n        score: 0,\n        currentQuestion: 0,\n        showScore: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default quizReducer;\n","import { createContext, useReducer } from \"react\";\nimport quizReducer from \"./QuizReducer\";\n\nconst initialState = { score: 0, currentQuestion: 0 };\nexport const QuizContext = createContext(initialState);\n\nexport const QuizProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(quizReducer, initialState);\n\n  return (\n    <QuizContext.Provider value={{ state, dispatch }}>\n      {children}\n    </QuizContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { QuizContext } from \"../context/QuizContext\";\n\nconst Option = ({ answerId, optionId, option }) => {\n  const { state, dispatch } = useContext(QuizContext);\n  console.log(state.score);\n\n  const handleSelect = (e) => {\n    if (e.target.id === answerId) {\n      dispatch({\n        type: \"PICK\",\n        payload: { ...state, correct: true, checked: true },\n      });\n    } else {\n      dispatch({\n        type: \"PICK\",\n        payload: { ...state, correct: false, checked: true },\n      });\n    }\n  };\n  return (\n    <li>\n      <input\n        type=\"radio\"\n        name=\"answer\"\n        id={optionId}\n        className=\"answer\"\n        onClick={handleSelect}\n        checked={state.checked}\n      />\n      <label htmlFor={optionId} id=\"a_text\">\n        {option}\n      </label>\n    </li>\n  );\n};\n\nexport default Option;\n","import React from \"react\";\nimport Option from \"./Option\";\n\nconst Question = ({ question, option_a, option_b, option_c, option_d, id }) => {\n  return (\n    <>\n      <h2 id={id}>{question}</h2>\n      <ul>\n        <Option answerId={id} optionId=\"a\" option={option_a} />\n        <Option answerId={id} optionId=\"b\" option={option_b} />\n        <Option answerId={id} optionId=\"c\" option={option_c} />\n        <Option answerId={id} optionId=\"d\" option={option_d} />\n      </ul>\n    </>\n  );\n};\n\nexport default Question;\n","export const quizData = [\n  {\n    question: \"Which language runs in a web browser?\",\n    a: \"Java\",\n    b: \"C\",\n    c: \"Python\",\n    d: \"JavaScript\",\n    correct: \"d\",\n  },\n  {\n    question: \"What does CSS stand for?\",\n    a: \"Central Style Sheets\",\n    b: \"Cascading Style Sheets\",\n    c: \"Cascading Simple Sheets\",\n    d: \"Cars SUVs Sailboats\",\n    correct: \"b\",\n  },\n  {\n    question: \"What does HTML stand for?\",\n    a: \"Hypertext Markup Language\",\n    b: \"Hypertext Markdown Language\",\n    c: \"Hyperloop Machine Language\",\n    d: \"Helicopters Terminals Motorboats Lamborginis\",\n    correct: \"a\",\n  },\n  {\n    question: \"What year was JavaScript launched?\",\n    a: \"1996\",\n    b: \"1995\",\n    c: \"1994\",\n    d: \"none of the above\",\n    correct: \"b\",\n  },\n];\n","import React, { useContext } from \"react\";\nimport Question from \"./Question\";\nimport { quizData } from \"../questions/questionsAndAnswer\";\nimport { QuizContext } from \"../context/QuizContext\";\n\nconst QuestionContainer = () => {\n  const { state, dispatch } = useContext(QuizContext);\n  const { currentQuestion } = state;\n\n  const handleNext = () => {\n    if (currentQuestion < quizData.length) {\n      dispatch({ type: \"SUBMIT\", payload: { currentQuestion } });\n    } else {\n      dispatch({\n        type: \"SHOW_SCORE\",\n        payload: { ...state, score: state.score },\n      });\n    }\n  };\n  return (\n    <div className=\"quiz-container\" id=\"quiz\">\n      {state.showScore ? (\n        <div className=\"quiz-header\">\n          <h2>Your Score is {state.score}</h2>\n          <button onClick={() => dispatch({ type: \"RESET_SCORE\" })}>\n            Restart Quiz\n          </button>\n        </div>\n      ) : (\n        <>\n          {currentQuestion < quizData.length ? (\n            <div className=\"quiz-header\">\n              <Question\n                question={quizData[currentQuestion].question}\n                answer={quizData[currentQuestion].correct}\n                option_a={quizData[currentQuestion].a}\n                option_b={quizData[currentQuestion].b}\n                option_c={quizData[currentQuestion].c}\n                option_d={quizData[currentQuestion].d}\n                id={quizData[currentQuestion].correct}\n              />\n              <button id=\"submit\" onClick={handleNext}>\n                Submit\n              </button>\n            </div>\n          ) : (\n            <div className=\"quiz-header\">\n              <h2>End of Quiz</h2>\n              <button id=\"submit\" onClick={handleNext}>\n                Show Score\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionContainer;\n","import React from \"react\";\nimport \"./App.css\";\nimport QuestionContainer from \"./components/QuestionContainer\";\nimport { QuizProvider } from \"./context/QuizContext\";\n\nfunction App() {\n  return (\n    <QuizProvider>\n      <QuestionContainer />\n    </QuizProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}